/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package multimodal.OneRecognizer;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Point;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author hakje
 */
public class PanelDessin extends javax.swing.JPanel {
    private List<Point> points;
    private GesteListener obs;
    private static final int SQUARE_SIZE = 100;
    private boolean isPanelLearning = false;

    /**
     * Creates new form PanelDessin
     */
    public PanelDessin() {
        initComponents();
        points = new ArrayList<Point>();
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.

        g.setColor(Color.red);
        for (Point pt : points) {
            g.fillOval(pt.x, pt.y, 5, 5);
        }
    }

    public void setPanelLearning (boolean vb){
        isPanelLearning = vb;
    }
    
    public void setGestureListener (GesteListener o){
        obs = o;
    }

    
    public void showGeste(List<Point> pts) {
        points = pts;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        points.clear();
        repaint();
        points.add( new Point(evt.getX(),evt.getY()));
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        points.add( new Point(evt.getX(),evt.getY()));
        if(points.size() > 20) {
            Geste geste = new Geste(points, SQUARE_SIZE);
            fireObservers(geste);
        } else {
            fireToLessPoints();
        }
    }//GEN-LAST:event_formMouseReleased

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        points.add( new Point(evt.getX(),evt.getY()));
        repaint();
    }//GEN-LAST:event_formMouseDragged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private void fireObservers(Geste geste) {
        obs.gesteFinished(geste, isPanelLearning);
    }

    private void fireToLessPoints() {
        obs.toLessPoint();
    }
}

